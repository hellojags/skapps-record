import { Connection } from "post-me";
import { ISkappDAC, IDACResponse, skappActionType, IDeploymentRecord, IPublishedAppRecord } from "./types";
export default class SkappDAC implements ISkappDAC {
    protected connection: Promise<Connection>;
    private client;
    private mySky;
    private paths;
    private skapp;
    private skappDict;
    private fileHierarchyEnsured;
    constructor();
    init(): Promise<void>;
    onUserLogin(): Promise<void>;
    private ensureDDDeployedAppsIndexPresent;
    private ensureSDDeployedAppsIndexPresent;
    private ensureDDPublishedAppsIndexPresent;
    private ensureSDPublishedAppsIndexPresent;
    private ensureDDPublishedAppsStatsIndexPresent;
    private ensureSDPublishedAppsStatsIndexPresent;
    setDeployment(data: IDeploymentRecord): Promise<IDACResponse>;
    getDeployments(appIds?: string[]): Promise<any>;
    setPublishedApp(data: IPublishedAppRecord): Promise<IDACResponse>;
    getPublishedApps(appIds?: string[], userId?: string): Promise<any>;
    getPublishedAppIds(userId?: string): Promise<any>;
    skappAction(action: skappActionType, appId: string, data: any): Promise<IDACResponse>;
    private getUpdatesPublishedAppStatsRecord;
    getStats(appIds?: string[], userId?: string): Promise<any>;
    private downloadFile;
    private setDataLink;
    private setEntryData;
    private getEntryData;
    private updateFile;
    private waitUntilFilesArePresent;
    private log;
    private fail;
}
